<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.players_in = 0

instance_create(view_wview[0]/2,view_hview[0]/2 - 128,obj_player1);
if global.players = 2
instance_create(view_wview[0]/2,view_hview[0]/2 + 128,obj_player1);
text = "check";

power_ups = 0
power_up[0] = ""

scr_add_power_up("Speed Boost" )
scr_add_power_up("Beam" )
scr_add_power_up("Double" )
scr_add_power_up("Shield" )
scr_add_power_up("Special" )

power_up_selected = -1
if(!audio_is_playing(snd_game))
audio_play_music(snd_game,true);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(vk_escape))
{
    game_end();
}

if random(10)&gt;9
{
np=instance_create(room_width + 10,random(view_hview[0]),obj_space_particle)
np.hspeed = -random(8)-8
}

if instance_number(obj_player1) = 0
room = rm_lose
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
scr_shorter_view_names()
for(a= 0; a &lt; instance_number(obj_player1);a++)
{
with instance_find(obj_player1,a)
    {
    scr_shorter_view_names()
    if(player_id=0)
    {
    //LIVES
    
    for(i=0 ; i &lt; maxlives ; i++)
        {
        draw_sprite(spr_heart1 , 0 , vx + 24 + i * 48 , vy + 24)
        }
        
    for(i=0 ; i &lt; mylives ; i++)
        {
        draw_sprite(spr_heart1 , 1 , vx + 24 + i * 48 , vy + 24)
        }
        
    //SHIELDS
    
    for(i=0 ; i &lt; shields ; i++)
        {
        draw_sprite(spr_shield_symbol , 0 , vx + 24 + i * 48 + 24 , vy + 24 + 24)
        }
        
    //CONTINUES
    
    for(i=0 ; i &lt; continues; i++)
        {
        draw_sprite(spr_continue , 0 , vx + 24 + i * 48 , vy + 24 + 32)
        }
    }
    if(player_id=1)
    {
        //LIVES
    
    for(i=0 ; i &lt; maxlives ; i++)
        {
        draw_sprite(spr_heart1 , 0 , vx + 1000 - i * 48 , vy + 24)
        }
        
    for(i=0 ; i &lt; mylives ; i++)
        {
        draw_sprite(spr_heart1 , 1 , vx + 1000 - i * 48 , vy + 24)
        }
        
    //SHIELDS
    
    for(i=0 ; i &lt; shields ; i++)
        {
        draw_sprite(spr_shield_symbol , 0 , vx + 1000 - i * 48 + 24 , vy + 24 + 24)
        }
        
    //CONTINUES
    
    for(i=0 ; i &lt; continues; i++)
        {
        draw_sprite(spr_continue , 0 , vx + 1000 - i * 48 , vy + 24 + 32)
        }
    }
    }
}    

draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(font0);
draw_text(view_wport[0]/2+view_xview[0],view_hport[0]/16+view_yview[0],"Score: " + string(score));

draw_set_font(fnt_default);
//Draw Upgrade Bar - Might need to go in Player Object

for(i=0 ; i &lt; power_ups ; i++)
    {
    draw_sprite(spr_power_up_bar , power_up_selected == i , vx + i * 52 + 26 , vy + vh - 48 )
    
    if i = 0 &amp;&amp; obj_player1.powerup_speedup = 0
    || (i = 1 &amp;&amp; obj_player1.powerup_shot = 0)
    || (i = 2 &amp;&amp; obj_player1.powerup_shield = 0)
    || (i = 3 &amp;&amp; obj_player1.powerup_downshot = 0)
    || (i = 4 &amp;&amp; obj_player1.powerup_special = 0)
    draw_sprite(spr_power_ups , i , vx + i * 52 + 26, vy + vh - 48)
    }
/*

powerup_speedup = 0
powerup_shot = 0
powerup_shield = 0
powerup_downshot = 0
powerup_special = 0


for(i = 0; i &lt; 5; i++)
{
    draw_set_color(c_white);
    draw_rectangle(view_wport[0]/7*(1+i)+view_xview[0],
    view_hport[0]-view_hport[0]/32*3,
    view_wport[0]/7*(2+i)+view_xview[0],
    view_hport[0]-view_hport[0]/32*2,0);
    switch(i)
    {
        case 0:
            text = "Speed Up";
            break;
        case 1:
            text = "Beam";
            break;
        case 2:
            text = "Double";
            break;
        case 3:
            text = "Shield";
            break;
        case 4:
            text = "Special";
            break;
    }
    draw_set_color(c_black);
    draw_text(view_wport[0]/7*(1+i)+(view_wport[0]/7*(2+i)-view_wport[0]/7*(1+i))/2+view_xview[0],
    view_hport[0]-view_hport[0]/32*2.5,
    text);
    draw_set_color(c_gray);
    draw_rectangle(view_wport[0]/7*(1+i)+view_xview[0]-2,
    view_hport[0]-view_hport[0]/32*3,
    view_wport[0]/7*(2+i)+view_xview[0],
    view_hport[0]-view_hport[0]/32*2,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
