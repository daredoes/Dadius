<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_controls</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_set_cursor(cr_none)
//Player 1 Controls
player_up[0] = ord('W');
player_down[0] = ord('S');
player_left[0] = ord('A');
player_right[0] = ord('D');
player_upgrade[0] = ord('H');
player_shoot[0] = ord('F');
player_controller[0] = false;

player_up[1] = vk_up
player_down[1] = vk_down
player_left[1] = vk_left
player_right[1] = vk_right
player_upgrade[1] = ord(':')
player_shoot[1] = ord('K')
player_controller[1] = false;

//Dev Controls
global.devControlsActive = 0 //true

//Joystick Controls
global.joystick_down_pressed[0] = 0
global.joystick_down_pressed[1] = 0

global.joystick_up_pressed[0] = 0
global.joystick_up_pressed[1] = 0

global.joystick_left_pressed[0] = 0
global.joystick_left_pressed[1] = 0

global.joystick_right_pressed[0] = 0
global.joystick_right_pressed[1] = 0

global.joystickExists[0] = joystick_exists(1)
global.joystickExists[1] = joystick_exists(2)

global.joysticks = 0

if global.joystickExists[0]
    {
    global.joysticks = 1
    global.joystickButtons[0] = joystick_buttons(1)
    }
if global.joystickExists[1]
    {
    global.joysticks = 2
    global.joystickButtons[1] = joystick_buttons(2)
    }

//JOYSTICK BUTTONS PRESSED
for(j=0 ; j &lt; global.joysticks ; j++)
    {
    for(i=0 ; i &lt; global.joystickButtons[j] ; i++)
        {
        global.joystick_button_pressed[j,i] = 0
        }
    }    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if global.joysticks &gt; 0
    {
    for(j=0 ; j &lt; 2 ; j++)
        {
        if global.joystickExists[j]
            {
            //JOYSTICK BUTTONS PRESSED
            //for(j=0 ; j &lt; global.joysticks ; j++)
            //    {
                for(i=0 ; i &lt; global.joystickButtons[j] ; i++)
                    {
                    if joystick_check_button(j+1,i)
                        {
                        if global.joystick_button_pressed[j,i] = 0
                            global.joystick_button_pressed[j,i] = 1
                        else
                            global.joystick_button_pressed[j,i] = 2
                        }
                    else
                        {
                        global.joystick_button_pressed[j,i] = 0
                        }
                    }
            //    }
            
            //JOYSTICK DOWN PRESSED
            if joystick_ypos(j+1) &gt; .5
                {
                if global.joystick_down_pressed[0] = 0
                    {
                    global.joystick_down_pressed[j] = 1
                    }
                else
                    {
                    global.joystick_down_pressed[j] = 2
                    }
                }
            else
                {
                global.joystick_down_pressed[j] = 0
                }
            
            //JOYSTICK UP PRESSED
            if joystick_ypos(j+1) &lt; -.5
                {
                if global.joystick_up_pressed[0] = 0
                    {
                    global.joystick_up_pressed[j] = 1
                    }
                else
                    {
                    global.joystick_up_pressed[j] = 2
                    }
                }
            else
                {
                global.joystick_up_pressed[j] = 0
                }
                
            //JOYSTICK RIGHT PRESSED
            if joystick_xpos(j+1) &gt; .5
                {
                if global.joystick_right_pressed[0] = 0
                    {
                    global.joystick_right_pressed[j] = 1
                    }
                else
                    {
                    global.joystick_right_pressed[j] = 2
                    }
                }
            else
                {
                global.joystick_right_pressed[j] = 0
                }
            
            //JOYSTICK LEFT PRESSED
            if joystick_xpos(j+1) &lt; -.5
                {
                if global.joystick_left_pressed[0] = 0
                    {
                    global.joystick_left_pressed[j] = 1
                    }
                else
                    {
                    global.joystick_left_pressed[j] = 2
                    }
                }
            else
                {
                global.joystick_left_pressed[j] = 0
                }
            }
        }
    }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_set_color(c_white)
//draw_text(x,y,instance_number(obj_controls))

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
